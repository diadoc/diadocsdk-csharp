import "Documents/ReceiptStatus.proto";

package Diadoc.Api.Proto.Documents.BilateralDocument;

option java_outer_classname = "BilateralDocumentProtos";

message TrustConnectionRequestMetadata {
	optional BilateralDocumentStatus TrustConnectionRequestStatus = 1 [default = UnknownBilateralDocumentStatus];
}

message BasicDocumentMetadata {
	optional BilateralDocumentStatus DocumentStatus = 1 [default = UnknownBilateralDocumentStatus];
	required string Total = 2;
	optional string Vat = 3;
	optional string Grounds = 4;
	optional ReceiptStatus ReceiptStatus = 5 [default = UnknownReceiptStatus];
	optional string RevisionDate = 6;
	optional string RevisionNumber = 7;
}

message PriceListMetadata {
	optional BilateralDocumentStatus DocumentStatus = 1 [default = UnknownBilateralDocumentStatus];
	optional string PriceListEffectiveDate = 2;
	optional string ContractDocumentDate = 3;
	optional string ContractDocumentNumber = 4;
	optional ReceiptStatus ReceiptStatus = 5 [default = UnknownReceiptStatus];
}

message ContractMetadata {
	optional BilateralDocumentStatus DocumentStatus = 1 [default = UnknownBilateralDocumentStatus];
	optional string ContractPrice = 2;
	optional string ContractType = 3;
	optional ReceiptStatus ReceiptStatus = 4 [default = UnknownReceiptStatus];
}

message SupplementaryAgreementMetadata {
	optional BilateralDocumentStatus DocumentStatus = 1 [default = UnknownBilateralDocumentStatus];
	optional string Total = 2;
	optional string ContractType = 3;
	required string ContractNumber = 4;
	required string ContractDate = 5;
	optional ReceiptStatus ReceiptStatus = 6 [default = UnknownReceiptStatus];
}

message BilateralDocumentMetadata {
	optional BilateralDocumentStatus DocumentStatus = 1 [default = UnknownBilateralDocumentStatus];
	optional ReceiptStatus ReceiptStatus = 2 [default = UnknownReceiptStatus];
}

enum BilateralDocumentStatus {
	UnknownBilateralDocumentStatus = 0;	// Reserved status to report to legacy clients for newly introduced statuses
	OutboundWaitingForRecipientSignature = 1;
	OutboundWithRecipientSignature = 2;
	OutboundWithRecipientPartiallySignature = 19;
	OutboundRecipientSignatureRequestRejected = 3;
	OutboundWaitingForSenderSignature = 10;
	OutboundInvalidSenderSignature = 11;
	InboundWaitingForRecipientSignature = 4;
	InboundWithRecipientSignature = 5;
	InboundWithRecipientPartiallySignature = 20;
	InboundRecipientSignatureRequestRejected = 6;
	InboundInvalidRecipientSignature = 12;
	InternalWaitingForRecipientSignature = 7;
	InternalWithRecipientSignature = 8;
	InternalWithRecipientPartiallySignature = 21;
	InternalRecipientSignatureRequestRejected = 9;
	InternalWaitingForSenderSignature = 13;
	InternalInvalidSenderSignature = 14;
	InternalInvalidRecipientSignature = 15;
}
