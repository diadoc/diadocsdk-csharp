import "Severity.proto";
import "Content_v3.proto";

package Diadoc.Api.Proto.PowersOfAttorney;

option java_outer_classname = "PowerOfAttorneyValidationProtos";

message PowerOfAttorneyValidationStatus {
	optional Severity Severity = 1 [default = UnknownSeverity];
	optional PowerOfAttorneyValidationStatusNamedId StatusNamedId = 2 [default = UnknownStatus];
	optional string StatusText = 3;
	repeated PowerOfAttorneyValidationError Errors = 4 [deprecated = true];
	optional ValidationProtocol ValidationProtocol = 5;
	optional PowerOfAttorneyValidationError OperationError = 6;
}

enum PowerOfAttorneyValidationStatusNamedId {
	UnknownStatus = 0; //reserved for backward compatibility
	CanNotBeValidated = 1;
	IsValid = 2;
	IsNotValid = 3;
	ValidationError = 4;
	IsNotAttached = 5;
	HasWarnings = 6;
}

message PowerOfAttorneyValidationError {
	required string Code = 1;
	required string Text = 2;
}

message PowerOfAttorneyPrevalidateRequest
{
    required ConfidantCertificateToPrevalidate ConfidantCertificate = 1;
}

message ConfidantCertificateToPrevalidate {
    optional string Thumbprint = 1;
    optional Content_v3 Content = 2;
}

message PowerOfAttorneyPrevalidateResult {
    required PowerOfAttorneyValidationStatus PrevalidateStatus = 1;
}

message ValidationProtocol {
	repeated ValidationCheckResult CheckResults = 1;
}

message ValidationCheckResult {
	optional PowerOfAttorneyValidationCheckStatus Status = 1 [default = UnknownCheckStatus];
	required string Name = 2;
	optional PowerOfAttorneyValidationError Error = 3;
}

enum PowerOfAttorneyValidationCheckStatus {
	UnknownCheckStatus = 0;  //reserved for backward compatibility
	Ok = 1;
	Warning = 2;
	Error = 3;
}
